# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  schedule:
    - cron: "0 0 1 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      profile:
        description: "profile"
        #required: true
        default: "xfce"
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    # The type of runner that the job will run on

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Configure git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      # Runs a single command using the runner's shell
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      # Runs a set of commands using the runners shell
      - name: Build my distro
        run: |
         PROFILE=${{ inputs.profile || 'xfce' }}
         nix build .#nixosConfigurations.${PROFILE}.config.system.build.isoImage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iso
          path: result/iso

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Get current date
        env:
          TZ: "Asia/Tokyo"
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%dT%R %:z')" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: iso

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          name: ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
          files: |
            nixos-*.iso
